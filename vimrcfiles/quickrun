augroup quickrun
  autocmd!
  " quickrunの出力結果にAnsiEscを実行して色付け
  autocmd FileType quickrun AnsiEsc
  " *_spec.rb というファイルに対して ruby.rspec " ファイルタイプが適用されるように設定
  autocmd BufWinEnter,BufNewFile *_spec.rb set filetype=ruby.rspec
augroup END

let g:quickrun_config = {
      \ '*' : {
      \ 'split': 'vertical',
      \ 'hook/time/enable': '1',
      \ },
      \
      \ '_' : {
      \     'runner'                    : 'vimproc',
      \     'runner/vimproc/updatetime' : 60,
      \
      \     'outputter'                       : 'error',
      \     'outputter/error/success'         : 'buffer',
      \     'outputter/error/error'           : 'buffer',
      \     'outputter/buffer/close_on_empty' : 1,
      \ },
      \
      \ 'ruby.rspec' : {
      \     'command': 'rspec',
      \     'exec': 'bundle exec %c %s -cfd --tty',
      \ },
      \ }
set splitbelow
set splitright

" \r でquickfixを閉じて、保存してからquickrunを実行
let g:quickrun_no_default_key_mappings = 1
nnoremap \r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
xnoremap \r :<C-U>cclose<CR>:write<CR>gv:QuickRun -mode v<CR>

" <C-c> でquickrunを停止
nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"

" RSpec
nnoremap \rl :call QRunRspecCurrentLine()<CR>
fun! QRunRspecCurrentLine()
  let line = line(".")
  exe ":QuickRun -exec 'bundle exec %c %s%o' -cmdopt ':" . line . " -cfd --tty'"
endfun

" vim: set ft=vim:
